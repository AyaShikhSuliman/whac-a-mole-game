[{"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\index.js":"1","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\App.js":"2","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\reportWebVitals.js":"3","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\components\\Screen.js":"4","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\components\\ScoreDisplay.js":"5","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\WebSocketService.js":"6"},{"size":535,"mtime":1696702797141,"results":"7","hashOfConfig":"8"},{"size":1944,"mtime":1696749744296,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1696702797411,"results":"10","hashOfConfig":"8"},{"size":891,"mtime":1696753170373,"results":"11","hashOfConfig":"8"},{"size":190,"mtime":1696703091043,"results":"12","hashOfConfig":"8"},{"size":1011,"mtime":1696749728853,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"332plw",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\index.js",[],[],["34"],"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\App.js",["35"],[],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Screen from './components/Screen';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport { connectWebSocket, disconnectWebSocket } from './WebSocketService'; // Import WebSocket functions\n\nfunction App() {\n  const [screenColor, setScreenColor] = useState('red');\n  const [score, setScore] = useState(0);\n\n  // Function to simulate screen color changes\n  const changeScreenColor = () => {\n    if (screenColor === 'red') {\n      setScreenColor('green');\n    } else {\n      setScreenColor('red');\n    }\n  };\n\n  // Simulate screen color changes at a random interval\n  useEffect(() => {\n    const intervalId = setInterval(changeScreenColor, Math.random() * 2000 + 1000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [screenColor]);\n\n  useEffect(() => {\n    connectWebSocket(handleWebSocketMessage);\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n\n  // Callback function to handle WebSocket messages\n  const handleWebSocketMessage = (message) => {\n    // Assuming that the incoming message has a 'type' field\n    switch (message.type) {\n      case 'screenUpdate':\n        // Update the screen color based on the received message\n        // The 'color' field represents the new screen color\n        setScreenColor(message.color);\n        break;\n  \n      case 'scoreUpdate':\n        // Update the player's score based on the received message\n        // The 'score' field represents the new score\n        setScore(message.score);\n        break;\n  \n      default:\n        // Handle other message types if needed\n        break;\n    }\n  };\n  \n\n\n  return (\n    <div className=\"App\">\n      <h1>Phone App</h1>\n      <Screen color={screenColor} />\n      <ScoreDisplay score={score} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\reportWebVitals.js",[],[],"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\components\\Screen.js",[],[],"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\components\\ScoreDisplay.js",[],[],"C:\\Users\\ACER\\Desktop\\Semester 4\\Individual\\phone3\\src\\WebSocketService.js",[],[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":26,"column":6,"nodeType":"40","endLine":26,"endColumn":19,"suggestions":"41"},"no-new-object",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeScreenColor'. Either include it or remove the dependency array.","ArrayExpression",["43"],"no-object-constructor",{"desc":"44","fix":"45"},"Update the dependencies array to be: [changeScreenColor, screenColor]",{"range":"46","text":"47"},[859,872],"[changeScreenColor, screenColor]"]