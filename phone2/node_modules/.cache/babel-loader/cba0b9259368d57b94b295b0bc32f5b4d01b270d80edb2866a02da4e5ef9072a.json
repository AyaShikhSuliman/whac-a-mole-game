{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Semester 4\\\\Individual\\\\phone2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Screen from './components/Screen';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [screenColor, setScreenColor] = useState('red');\n  const [score, setScore] = useState(0);\n\n  // Function to simulate screen color changes\n  const changeScreenColor = () => {\n    if (screenColor === 'red') {\n      setScreenColor('green');\n    } else {\n      setScreenColor('red');\n    }\n  };\n\n  // Simulate screen color changes at a random interval\n  useEffect(() => {\n    const intervalId = setInterval(changeScreenColor, Math.random() * 2000 + 1000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [screenColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phone App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Screen, {\n      color: screenColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreDisplay, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ujAiTarpvruZgE5MQF7XCcPsZ4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Screen","ScoreDisplay","jsxDEV","_jsxDEV","App","_s","screenColor","setScreenColor","score","setScore","changeScreenColor","intervalId","setInterval","Math","random","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/Semester 4/Individual/phone2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Screen from './components/Screen';\nimport ScoreDisplay from './components/ScoreDisplay';\n\nfunction App() {\n  const [screenColor, setScreenColor] = useState('red');\n  const [score, setScore] = useState(0);\n\n  // Function to simulate screen color changes\n  const changeScreenColor = () => {\n    if (screenColor === 'red') {\n      setScreenColor('green');\n    } else {\n      setScreenColor('red');\n    }\n  };\n\n  // Simulate screen color changes at a random interval\n  useEffect(() => {\n    const intervalId = setInterval(changeScreenColor, Math.random() * 2000 + 1000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [screenColor]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phone App</h1>\n      <Screen color={screenColor} />\n      <ScoreDisplay score={score} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIJ,WAAW,KAAK,KAAK,EAAE;MACzBC,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGC,WAAW,CAACF,iBAAiB,EAAEG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;;IAE9E;IACA,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA,CAACH,MAAM;MAACsB,KAAK,EAAEhB;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BlB,OAAA,CAACF,YAAY;MAACO,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAAChB,EAAA,CA5BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}