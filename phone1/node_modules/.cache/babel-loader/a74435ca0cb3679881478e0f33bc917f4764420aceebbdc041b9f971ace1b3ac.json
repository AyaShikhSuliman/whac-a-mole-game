{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nconst WS_URL = 'http://localhost:8080/ws-game'; // Replace with your WebSocket server URL\n\nlet stompClient = null;\nexport const connectWebSocket = (onMessageReceived, onScoreReceived) => {\n  const socket = new SockJS(WS_URL);\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, () => {\n    stompClient.subscribe('/topic/game-state', mesmessageBodysage => {\n      const messageBody = JSON.parse(message.body);\n      onMessageReceived(messageBody);\n    });\n    stompClient.subscribe('/topic/score-update', scoreMessage => {\n      const messageBody = JSON.parse(scoreMessage.body);\n      onScoreReceived(messageBody);\n    });\n  });\n};\n\n// export const connectWebSocket2 = (onMessageReceived) => {\n//   const socket = new SockJS(WS_URL);\n//   stompClient = Stomp.over(socket);\n//   stompClient.connect({}, () => {\n//     stompClient.subscribe('/topic/score-update', (message) => {\n//       const messageBody = JSON.parse(message.body);\n//       onMessageReceived(messageBody);\n//       });\n//   });\n\n// };\n\nexport const sendGameAction = gameAction => {\n  console.log('game action sent');\n  if (stompClient && stompClient.connected) {\n    stompClient.send('/app/game', {}, JSON.stringify(gameAction));\n  } else {\n    console.warn('WebSocket is not connected');\n  }\n};\nexport const disconnectWebSocket = () => {\n  if (stompClient && stompClient.connected) {\n    stompClient.disconnect(() => {\n      console.log('WebSocket connection closed');\n    });\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","WS_URL","stompClient","connectWebSocket","onMessageReceived","onScoreReceived","socket","over","connect","subscribe","mesmessageBodysage","messageBody","JSON","parse","message","body","scoreMessage","sendGameAction","gameAction","console","log","connected","send","stringify","warn","disconnectWebSocket","disconnect"],"sources":["C:/Users/ACER/Desktop/Semester 4/Individual/phone1/src/WebSocketService.js"],"sourcesContent":["\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nconst WS_URL = 'http://localhost:8080/ws-game'; // Replace with your WebSocket server URL\r\n\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (onMessageReceived, onScoreReceived) => {\r\n  const socket = new SockJS(WS_URL);\r\n  stompClient = Stomp.over(socket);\r\n  stompClient.connect({}, () => {\r\n    stompClient.subscribe('/topic/game-state', (mesmessageBodysage) => {\r\n      const messageBody = JSON.parse(message.body);\r\n      onMessageReceived(messageBody);\r\n    });\r\n    stompClient.subscribe('/topic/score-update', (scoreMessage) => {\r\n      const messageBody = JSON.parse(scoreMessage.body);\r\n      onScoreReceived(messageBody);\r\n    });\r\n  });\r\n\r\n};\r\n\r\n// export const connectWebSocket2 = (onMessageReceived) => {\r\n//   const socket = new SockJS(WS_URL);\r\n//   stompClient = Stomp.over(socket);\r\n//   stompClient.connect({}, () => {\r\n//     stompClient.subscribe('/topic/score-update', (message) => {\r\n//       const messageBody = JSON.parse(message.body);\r\n//       onMessageReceived(messageBody);\r\n//       });\r\n//   });\r\n\r\n// };\r\n\r\nexport const sendGameAction = (gameAction) => {\r\n  console.log('game action sent');\r\n  if (stompClient && stompClient.connected) {\r\n    stompClient.send('/app/game', {}, JSON.stringify(gameAction));\r\n  } else {\r\n    console.warn('WebSocket is not connected');\r\n  }\r\n};\r\n\r\nexport const disconnectWebSocket = () => {\r\n  if (stompClient && stompClient.connected) {\r\n    stompClient.disconnect(() => {\r\n      console.log('WebSocket connection closed');\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,+BAA+B,CAAC,CAAC;;AAEhD,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,iBAAiB,EAAEC,eAAe,KAAK;EACtE,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAACE,MAAM,CAAC;EACjCC,WAAW,GAAGF,KAAK,CAACO,IAAI,CAACD,MAAM,CAAC;EAChCJ,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;IAC5BN,WAAW,CAACO,SAAS,CAAC,mBAAmB,EAAGC,kBAAkB,IAAK;MACjE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;MAC5CX,iBAAiB,CAACO,WAAW,CAAC;IAChC,CAAC,CAAC;IACFT,WAAW,CAACO,SAAS,CAAC,qBAAqB,EAAGO,YAAY,IAAK;MAC7D,MAAML,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACG,YAAY,CAACD,IAAI,CAAC;MACjDV,eAAe,CAACM,WAAW,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMM,cAAc,GAAIC,UAAU,IAAK;EAC5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,IAAIlB,WAAW,IAAIA,WAAW,CAACmB,SAAS,EAAE;IACxCnB,WAAW,CAACoB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAEV,IAAI,CAACW,SAAS,CAACL,UAAU,CAAC,CAAC;EAC/D,CAAC,MAAM;IACLC,OAAO,CAACK,IAAI,CAAC,4BAA4B,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACvC,IAAIvB,WAAW,IAAIA,WAAW,CAACmB,SAAS,EAAE;IACxCnB,WAAW,CAACwB,UAAU,CAAC,MAAM;MAC3BP,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}